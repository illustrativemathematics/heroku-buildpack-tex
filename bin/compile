#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
# set -e

BUILD_DIR=$1
CACHE_DIR=$2
BIN_DIR=$(cd "$(dirname "$0")"; pwd) # absolute path
CONF_DIR="$BIN_DIR/../conf"

TEXLIVE_REPOSITORY="ftp://tug.org/historic/systems/texlive/2017/tlnet-final"

# TODO: remove this in future versions.
# This is only kept for backwards support
if [ -f "$BUILD_DIR/.texlive-repository" ]; then
    TEXLIVE_REPOSITORY=$(cat "$BUILD_DIR/.texlive-repository")
fi

# Optional: use custom path to texlive installer
if [ -f "$BUILD_DIR/texlive.repository" ]; then
    TEXLIVE_REPOSITORY=$(cat "$BUILD_DIR/texlive.repository")
fi

TEXLIVE_INSTALLER_URL="$TEXLIVE_REPOSITORY/install-tl-unx.tar.gz"

TEXLIVE_HOME=$BUILD_DIR/.texlive
TEXLIVE_CACHE=$CACHE_DIR/.texlive
PATH=$TEXLIVE_HOME/bin/x86_64-linux:$PATH
PROFILE_D=$BUILD_DIR/.profile.d/texlive.sh

TEXMF_LOCAL=$TEXLIVE_HOME/texmf-local/tex/latex/local
mkdir -p $TEXMF_LOCAL

# Output helpers
# shellcheck source=bin/utils
source "$BIN_DIR/utils"

# Prepare the various paths
mkdir -p "$TEXLIVE_HOME"
mkdir -p "$TEXLIVE_CACHE"
mkdir -p "$(dirname "$PROFILE_D")"

build-step "TEXLIVE_INATALLER_URL: $TEXLIVE_INSTALLER_URL"
build-step "TEXLIVE_HOME: $TEXLIVE_HOME"
build-step "TEXLIVE_CACHE: $TEXLIVE_CACHE"
build-step "TEXMF_LOCAL: $TEXMF_LOCAL"

if [ "$(ls -A "$TEXLIVE_CACHE")" ]; then
    build-step "Setting up build cache..."
    cp -R "$TEXLIVE_CACHE/"* "$TEXLIVE_HOME"
fi

if [ ! "$(which pdflatex)" ]; then
    build-step "Installing TeX Live..."

    if [ ! -f "$TEXLIVE_HOME/install-tl" ]; then
        build-step "Downloading install-tl from $TEXLIVE_INSTALLER_URL"
        curl "$TEXLIVE_INSTALLER_URL" -L -s -o - | tar --strip-components=1 -xzf - -C "$TEXLIVE_HOME"
        if [ ! -f "$(which $TEXLIVE_HOME/install-tl)" ]; then
            build-warn "Unable to download TeX installer!"
            exit 0
        fi
    fi

    PROF=$BIN_DIR/../conf/texlive.profile
    {
        echo "TEXDIR $TEXLIVE_HOME";
        echo "TEXMFCONFIG $TEXLIVE_HOME/var/texmf-config";
        echo "TEXMFHOME $TEXLIVE_HOME/var/texmf";
        echo "TEXMFLOCAL $TEXLIVE_HOME/texmf-local";
        echo "TEXMFSYSCONFIG $TEXLIVE_HOME/texmf-config";
        echo "TEXMFSYSVAR $TEXLIVE_HOME/texmf-var";
        echo "TEXMFVAR $TEXLIVE_HOME/var/texmf-var";
    } >> "$PROF"

    cd "$TEXLIVE_HOME"

    ./install-tl --repository="$TEXLIVE_REPOSITORY" --profile="$PROF"
fi

# Check for an essential binary to make sure it's installed
if [ ! "$(which latex)" ]; then
    build-warn "TeX Live installation failed"
    build-warn "TeX will be unavailable until this is addressed"
    exit 0
fi

if wget -q $TEXLIVE_REPOSITORY/README.md
then
  # the repository is responsive
  build-step "Updating TeX Live..."

  tlmgr option repository "$TEXLIVE_REPOSITORY"

  build-step "TeX Live repository set to $TEXLIVE_REPOSITORY"

  tlmgr update --self

  # install user-provided-packages
  if [ -f "$BUILD_DIR/texlive.packages" ]; then
      build-step "Installing custom packages..."
      # shellcheck disable=SC2046
      tlmgr install $(cat "$BUILD_DIR/texlive.packages")
  fi

  build-step "Updating installed packages..."
  tlmgr update --all
else
  build-warn "Unable to access $TEXLIVE_REPOSITORY; falling back on cached installation"
  exit 0
fi

build-step "TeX Live installation successful!"
build-step "Cleaning up temporary files..."
# Make sure the cache is empty
rm -rf "${TEXLIVE_CACHE:?}/"*

build-step "Caching..."
# Store a copy of it in the cache so it doesn't have to be fetched again
cp -R "$TEXLIVE_HOME/"* "$TEXLIVE_CACHE/"

# Set up the environment for runtimes now that compilation has finished
# shellcheck disable=SC2016
echo 'export PATH=$HOME/.texlive/bin/x86_64-linux:$PATH' > "$PROFILE_D"

########################################################
# EDC: install cam's Tikz files in the texmf hierarchy #
########################################################

build-step "Adding custom sty and cls files to TeX path"
for file in $CONF_DIR/*.{sty,cls}; do
    echo "Copying $file to $TEXMF_LOCAL"
    cp $file $TEXMF_LOCAL
done

build-step "Running texhash..."
texhash

build-step "Done adding sty files to TeX path!"
